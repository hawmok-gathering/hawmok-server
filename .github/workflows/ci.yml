name: Hawmok CI

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

env:
  EC2_HOST: ${{ secrets.EC2_USERNAME }}
  EC2_SSH_USER: ec2-user
  PRIVATE_KEY: ${{ secrets.EC2_KEY }}

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## make application.properties
      - name: Set up application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: ./gradlew build

      # docker image build
      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hawmok-server:latest .

      # docker login
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy-to-ec2:
      needs: build-and-push-docker
      runs-on: ubuntu-latest

      steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.PRIVATE_KEY }}
          script: |
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=80-8080")
            
            if [ ! -z "$CONTAINER_ID" ]; thenCT_NAME }}
              sudo docker stop $CONTAINER_IDECT_NAME }}
              sudo docker rm $CONTAINER_ID
            fi
            
            sudo docker pull ${{ env.DOCKER_HUB }}
            sudo docker run --name ${{ env.CONTAINER_NAME }} -d -p 80:8080 -e TZ=Asia/Seoul ${{ env.DOCKER_HUB }}
            
